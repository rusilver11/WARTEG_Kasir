/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package siperpus;

import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Noobman
 */
public class Radmin1 extends javax.swing.JInternalFrame {
    Connection conn;
    PreparedStatement pst;
    ResultSet rs;
      DefaultTableModel model;
      
    public Radmin1() {
        initComponents();
        conn = MainClassKoneksi1.getKoneksi();
         model = (DefaultTableModel) tbdttr.getModel();
       loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbdttr = new javax.swing.JTable();
        tfsearch = new javax.swing.JTextField();

        setMaximizable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        tbdttr.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id tr", "ID Transaction", "Menu Name", "Category", "QTY", "Price", "Amount", "Total", "Title 9", "Title 10", "Payment"
            }
        ));
        jScrollPane1.setViewportView(tbdttr);

        tfsearch.setText("ID Search");
        tfsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfsearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfsearchKeyReleased
        loadData(tfsearch.getText());
    }//GEN-LAST:event_tfsearchKeyReleased

    
    private void loadData(String key) {
        DefaultTableModel model = new DefaultTableModel();
        tbdttr.setModel(model);
        model.addColumn("ID Transaction");
        model.addColumn("Menu");
        model.addColumn("Category");
        model.addColumn("Price");
        model.addColumn("Qty");
        model.addColumn("Amount");
        model.addColumn("Total");
        model.addColumn("Payment");
        model.addColumn("Cashback");
        model.addColumn("Cashier");
        model.addColumn("Date");

        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            Connection conn = MainClassKoneksi1.getKoneksi();
            Statement st = conn.createStatement();
//            String sql = "Select * from tr_transaction where kode_tr like'%"+key+"%'";
            String sql1 = "SELECT tr_transaction.kode_tr,Menu,Category,Price,Qty,tr_transaction.Amount,detail_transaction.amount,payment,cashback,unm_user,detail_transaction.dt FROM tr_transaction JOIN detail_transaction ON tr_transaction.kode_tr=detail_transaction.kode_tr WHERE tr_transaction.kode_tr LIKE '%" + key + "%'OR tr_transaction.Menu LIKE '%" + key + "%'";
            ResultSet rs = st.executeQuery(sql1);
            while (rs.next()) {
                Object[] o = new Object[11];
                o[0] = rs.getString(1);
                o[1] = rs.getString(2);
                o[2] = rs.getString(3);
                o[3] = rs.getString(4);
                o[4] = rs.getString(5);
                o[5] = rs.getString(6);
                o[6] = rs.getString(7);
                o[7] = rs.getString(8);
                o[8] = rs.getString(9);
                o[9] = rs.getString(10);
                o[10] = rs.getString(11);

                model.addRow(o);
            }
            rs.close();
            st.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Terjadi Error");
        }

    }
    public void loadData() {
        DefaultTableModel model = new DefaultTableModel();
        tbdttr.setModel(model);
        model.addColumn("ID Transaction");
        model.addColumn("Menu");
        model.addColumn("Category");
        model.addColumn("Price");
        model.addColumn("Qty");
        model.addColumn("Amount");
        model.addColumn("Total");
        model.addColumn("Payment");
        model.addColumn("Cashback");
        model.addColumn("Cashier");
        model.addColumn("Date");

        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            Connection conn = MainClassKoneksi1.getKoneksi();
            Statement st = conn.createStatement();
//            String sql = "Select * from tr_transaction";
            String sql1 = "SELECT tr_transaction.kode_tr,Menu,Category,Price,Qty,tr_transaction.Amount,detail_transaction.amount,payment,cashback,unm_user,detail_transaction.dt "
                    + "FROM tr_transaction JOIN detail_transaction ON tr_transaction.kode_tr=detail_transaction.kode_tr ORDER BY kode_tr ASC";
            ResultSet rs = st.executeQuery(sql1);
            while (rs.next()) {
                Object[] o = new Object[11];
                o[0] = rs.getString(1);
                o[1] = rs.getString(2);
                o[2] = rs.getString(3);
                o[3] = rs.getString(4);
                o[4] = rs.getString(5);
                o[5] = rs.getString(6);
                o[6] = rs.getString(7);
                o[7] = rs.getString(8);
                o[8] = rs.getString(9);
                o[9] = rs.getString(10);
                o[10] = rs.getString(11);
                model.addRow(o);
            }
            rs.close();

            st.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Terjadi Error");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbdttr;
    private javax.swing.JTextField tfsearch;
    // End of variables declaration//GEN-END:variables
}
