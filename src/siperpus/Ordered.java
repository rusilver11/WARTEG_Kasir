/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package siperpus;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.mysql.jdbc.Connection;
import java.awt.print.PrinterException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable.PrintMode;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;


/**
 *
 * @author Noobman
 */
public class Ordered extends javax.swing.JFrame {

    Connection conn;
    PreparedStatement pst;
    ResultSet rs;
    String ID = UserID.getid();
    String tgl;
    String tglsekarang;
    String wktsekarang;
    DefaultTableModel model;
  
           
    public Ordered() {
        initComponents();
        conn = MainClassKoneksi1.getKoneksi();
//        txt_id_kasir.setText(ID);
        model = (DefaultTableModel) tbtransaction.getModel();
        select_menuf();select_menud();select_menuds();select_menus();
        tampil_data();AutoNumber();invisible(); tglskrg();
        bupdate.setEnabled(false);bNew.setEnabled(false);bcancel.setEnabled(false);
        bPay.setEnabled(false);bupdate.setEnabled(false);
        setsize();
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

    }
 public JLabel id_kasir(){
        return txt_id_kasir;
       
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt_id_kasir = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtdate = new javax.swing.JLabel();
        txtclock = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbfood = new javax.swing.JComboBox<>();
        bOrder = new javax.swing.JButton();
        cbdrink = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbdessert = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tfdrink = new javax.swing.JTextField();
        tffood = new javax.swing.JTextField();
        tfdessert = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbsnack = new javax.swing.JComboBox<>();
        tfsnack = new javax.swing.JTextField();
        txtpdessert = new javax.swing.JLabel();
        txtpsnack = new javax.swing.JLabel();
        txtpdrink = new javax.swing.JLabel();
        txtpfood = new javax.swing.JLabel();
        bOrder1 = new javax.swing.JButton();
        bOrder2 = new javax.swing.JButton();
        bOrder3 = new javax.swing.JButton();
        txtctgry = new javax.swing.JLabel();
        txtctgry2 = new javax.swing.JLabel();
        txtctgry3 = new javax.swing.JLabel();
        txtctgry1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbtransaction = new javax.swing.JTable();
        tfpayment = new javax.swing.JTextField();
        txtamount = new javax.swing.JLabel();
        bcancel = new javax.swing.JButton();
        bupdate = new javax.swing.JButton();
        tfcashback = new javax.swing.JTextField();
        txtidtr = new javax.swing.JLabel();
        bPay = new javax.swing.JButton();
        bNew = new javax.swing.JButton();
        txtidtr1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Warteg Cashier");
        setMinimumSize(new java.awt.Dimension(1024, 764));
        setPreferredSize(new java.awt.Dimension(1024, 764));

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Lao UI", 1, 20)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Account_80px.png"))); // NOI18N
        jLabel3.setText("Welcome");
        jLabel3.setToolTipText("");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        txt_id_kasir.setFont(new java.awt.Font("Lao UI", 1, 20)); // NOI18N
        txt_id_kasir.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jButton1.setFont(new java.awt.Font("Lao UI", 0, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Exit_80px.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtdate.setFont(new java.awt.Font("Lao UI", 0, 14)); // NOI18N
        txtdate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtdate.setText("000/00/00");

        txtclock.setFont(new java.awt.Font("Lao UI", 0, 14)); // NOI18N
        txtclock.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtclock.setText("00:00:00");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Clock_20px.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Calendar_20px.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_id_kasir, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtclock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtdate, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtclock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_id_kasir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Lao UI", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Porridge_80px.png"))); // NOI18N
        jLabel2.setText("Food");

        cbfood.setBackground(new java.awt.Color(102, 102, 102));
        cbfood.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        cbfood.setForeground(new java.awt.Color(255, 255, 255));
        cbfood.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbfoodItemStateChanged(evt);
            }
        });

        bOrder.setBackground(new java.awt.Color(102, 102, 102));
        bOrder.setFont(new java.awt.Font("Lao UI", 0, 10)); // NOI18N
        bOrder.setForeground(new java.awt.Color(255, 255, 255));
        bOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Coins_20px.png"))); // NOI18N
        bOrder.setText("Order");
        bOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOrderActionPerformed(evt);
            }
        });

        cbdrink.setBackground(new java.awt.Color(102, 102, 102));
        cbdrink.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        cbdrink.setForeground(new java.awt.Color(255, 255, 255));
        cbdrink.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbdrinkItemStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lao UI", 1, 30)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Orange_Juice_80px.png"))); // NOI18N
        jLabel5.setText("Drink");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        cbdessert.setBackground(new java.awt.Color(102, 102, 102));
        cbdessert.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        cbdessert.setForeground(new java.awt.Color(255, 255, 255));
        cbdessert.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbdessertItemStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lao UI", 1, 30)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Cupcake_80px_1.png"))); // NOI18N
        jLabel7.setText("Dessert");

        tfdrink.setBackground(new java.awt.Color(51, 51, 51));
        tfdrink.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        tfdrink.setForeground(new java.awt.Color(255, 255, 255));

        tffood.setBackground(new java.awt.Color(51, 51, 51));
        tffood.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        tffood.setForeground(new java.awt.Color(255, 255, 255));

        tfdessert.setBackground(new java.awt.Color(51, 51, 51));
        tfdessert.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        tfdessert.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Lao UI", 1, 30)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Hamburger_80px.png"))); // NOI18N
        jLabel8.setText("Snack");

        cbsnack.setBackground(new java.awt.Color(102, 102, 102));
        cbsnack.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        cbsnack.setForeground(new java.awt.Color(255, 255, 255));
        cbsnack.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbsnackItemStateChanged(evt);
            }
        });

        tfsnack.setBackground(new java.awt.Color(51, 51, 51));
        tfsnack.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        tfsnack.setForeground(new java.awt.Color(255, 255, 255));

        txtpdessert.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        txtpdessert.setForeground(new java.awt.Color(51, 51, 51));

        txtpsnack.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        txtpsnack.setForeground(new java.awt.Color(51, 51, 51));

        txtpdrink.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        txtpdrink.setForeground(new java.awt.Color(51, 51, 51));

        txtpfood.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        txtpfood.setForeground(new java.awt.Color(51, 51, 51));

        bOrder1.setBackground(new java.awt.Color(102, 102, 102));
        bOrder1.setFont(new java.awt.Font("Lao UI", 0, 10)); // NOI18N
        bOrder1.setForeground(new java.awt.Color(255, 255, 255));
        bOrder1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Coins_20px.png"))); // NOI18N
        bOrder1.setText("Order");
        bOrder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOrder1ActionPerformed(evt);
            }
        });

        bOrder2.setBackground(new java.awt.Color(102, 102, 102));
        bOrder2.setFont(new java.awt.Font("Lao UI", 0, 10)); // NOI18N
        bOrder2.setForeground(new java.awt.Color(255, 255, 255));
        bOrder2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Coins_20px.png"))); // NOI18N
        bOrder2.setText("Order");
        bOrder2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOrder2ActionPerformed(evt);
            }
        });

        bOrder3.setBackground(new java.awt.Color(102, 102, 102));
        bOrder3.setFont(new java.awt.Font("Lao UI", 0, 10)); // NOI18N
        bOrder3.setForeground(new java.awt.Color(255, 255, 255));
        bOrder3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Coins_20px.png"))); // NOI18N
        bOrder3.setText("Order");
        bOrder3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOrder3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtctgry, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txtpfood, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tffood, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbfood, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bOrder))
                    .addComponent(txtpdrink, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtctgry1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfdrink, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbdrink, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bOrder1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtpdessert, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtpsnack, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfsnack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfdessert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cbsnack, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bOrder2)
                            .addComponent(bOrder3)))
                    .addComponent(cbdessert, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtctgry2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtctgry3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(100, 100, 100))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbfood)
                    .addComponent(cbdessert, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tffood, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdessert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpdessert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpfood, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bOrder2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtctgry3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtctgry, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbdrink, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(cbsnack))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfdrink, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfsnack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtpsnack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtpdrink, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bOrder1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bOrder3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtctgry2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtctgry1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        tbtransaction.setBackground(new java.awt.Color(51, 51, 51));
        tbtransaction.setFont(new java.awt.Font("Lao UI", 0, 11)); // NOI18N
        tbtransaction.setForeground(new java.awt.Color(255, 255, 255));
        tbtransaction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Menu Name", "Category", "Price", "QTY", "Amount"
            }
        ));
        jScrollPane1.setViewportView(tbtransaction);

        tfpayment.setBackground(new java.awt.Color(51, 51, 51));
        tfpayment.setFont(new java.awt.Font("DialogInput", 0, 30)); // NOI18N
        tfpayment.setForeground(new java.awt.Color(255, 255, 255));
        tfpayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfpaymentActionPerformed(evt);
            }
        });

        txtamount.setFont(new java.awt.Font("DialogInput", 0, 30)); // NOI18N
        txtamount.setForeground(new java.awt.Color(51, 51, 51));

        bcancel.setBackground(new java.awt.Color(102, 102, 102));
        bcancel.setFont(new java.awt.Font("Lao UI", 0, 12)); // NOI18N
        bcancel.setForeground(new java.awt.Color(255, 255, 255));
        bcancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Cancel_Subscription_50px.png"))); // NOI18N
        bcancel.setText("Cancel");
        bcancel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), null));
        bcancel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bcancel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelActionPerformed(evt);
            }
        });

        bupdate.setBackground(new java.awt.Color(102, 102, 102));
        bupdate.setFont(new java.awt.Font("Lao UI", 0, 12)); // NOI18N
        bupdate.setForeground(new java.awt.Color(255, 255, 255));
        bupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Receipt_50px.png"))); // NOI18N
        bupdate.setText("Print");
        bupdate.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), null));
        bupdate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bupdate.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bupdateActionPerformed(evt);
            }
        });

        tfcashback.setEditable(false);
        tfcashback.setBackground(new java.awt.Color(51, 51, 51));
        tfcashback.setFont(new java.awt.Font("DialogInput", 0, 30)); // NOI18N
        tfcashback.setForeground(new java.awt.Color(255, 255, 255));
        tfcashback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfcashbackActionPerformed(evt);
            }
        });

        txtidtr.setFont(new java.awt.Font("Lao UI", 1, 30)); // NOI18N
        txtidtr.setForeground(new java.awt.Color(51, 51, 51));

        bPay.setBackground(new java.awt.Color(102, 102, 102));
        bPay.setFont(new java.awt.Font("Lao UI", 0, 12)); // NOI18N
        bPay.setForeground(new java.awt.Color(255, 255, 255));
        bPay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_Cash__50px.png"))); // NOI18N
        bPay.setText("Pay");
        bPay.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), null));
        bPay.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bPay.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPayActionPerformed(evt);
            }
        });

        bNew.setBackground(new java.awt.Color(102, 102, 102));
        bNew.setFont(new java.awt.Font("Lao UI", 0, 12)); // NOI18N
        bNew.setForeground(new java.awt.Color(255, 255, 255));
        bNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prjimg/icons8_New_Property_50px.png"))); // NOI18N
        bNew.setText("New");
        bNew.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), null));
        bNew.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bNew.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(bNew, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bcancel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bupdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bPay, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(txtidtr1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tfpayment, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addComponent(txtamount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tfcashback, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(txtidtr, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(bNew, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bPay))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtamount, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfpayment, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tfcashback, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtidtr1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtidtr, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPayActionPerformed
        int amount = Integer.parseInt(txtamount.getText());
        int payment = Integer.parseInt(tfpayment.getText());
        int cashback = (payment-amount);
        if(cashback <0 ){
        JOptionPane.showMessageDialog(this,"Need More Money");
        }
        else{
        tfcashback.setText(String.valueOf(cashback));
        JOptionPane.showMessageDialog(this,"Your Cashback\n"+"Rp."+cashback);
        bupdate.setEnabled(true);bNew.setEnabled(true);
        
         
        conn = MainClassKoneksi1.getKoneksi();
        String sql = "UPDATE detail_transaction SET amount = '"+txtamount.getText()+"', payment = '"+tfpayment.getText()+"', cashback = '"+tfcashback.getText()+"' WHERE kode_tr = '"+txtidtr.getText()+"'";
              
        try {
            Statement st = conn.createStatement();
            st.executeUpdate(sql);
            bcancel.setEnabled(false);bPay.setEnabled(false);
            bOrder.setEnabled(false); bOrder1.setEnabled(false); 
            bOrder2.setEnabled(false);bOrder3.setEnabled(false);
//            model.getDataVector().removeAllElements();
//            model.fireTableDataChanged();
//            clear();
//            tfcashback.setText(""); tfpayment.setText(""); txtamount.setText("");
            
            
        } 
          catch (Exception e) {
              JOptionPane.showMessageDialog(this,"Please Input Cash");
        }
        }
    

    }//GEN-LAST:event_bPayActionPerformed

    private void cbfoodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbfoodItemStateChanged

        conn = MainClassKoneksi1.getKoneksi();
        String sql = "SELECT * FROM ms_food WHERE nm_food = '" + cbfood.getSelectedItem().toString() + "'";
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                txtpfood.setText(rs.getString("prc_food"));
                txtctgry.setText(rs.getString("ktgry_food"));

            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_cbfoodItemStateChanged

    private void cbdrinkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbdrinkItemStateChanged
        conn = MainClassKoneksi1.getKoneksi();
        String sql = "SELECT * FROM ms_food WHERE nm_food = '" + cbdrink.getSelectedItem().toString() + "'";
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                txtpdrink.setText(rs.getString("prc_food"));
                txtctgry1.setText(rs.getString("ktgry_food"));

            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cbdrinkItemStateChanged

    private void cbdessertItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbdessertItemStateChanged
        conn = MainClassKoneksi1.getKoneksi();
        String sql = "SELECT * FROM ms_food WHERE nm_food = '" + cbdessert.getSelectedItem().toString() + "'";
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                txtpdessert.setText(rs.getString("prc_food"));
                txtctgry3.setText(rs.getString("ktgry_food"));
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cbdessertItemStateChanged

    private void cbsnackItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbsnackItemStateChanged
        conn = MainClassKoneksi1.getKoneksi();
        String sql = "SELECT * FROM ms_food WHERE nm_food = '" + cbsnack.getSelectedItem().toString() + "'";
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                txtpsnack.setText(rs.getString("prc_food"));
                txtctgry2.setText(rs.getString("ktgry_food"));
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cbsnackItemStateChanged

    private void bOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOrderActionPerformed

        conn = MainClassKoneksi1.getKoneksi();
        if (tffood.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please Insert amount");
        } else {
            int total = Integer.parseInt(txtpfood.getText()) * Integer.parseInt(tffood.getText());
            int simpan2 = 0;
            if (txtamount.getText().equals("")) {
                simpan2 = 0;
            } else {
                simpan2 = Integer.valueOf(txtamount.getText());
            }
            try {
                String sql2 = "INSERT INTO tr_transaction (kode_tr,Menu,Category,Price,Qty,Amount,dt) VALUES"
                        + "('" + txtidtr.getText() + "','" + cbfood.getSelectedItem().toString() + "','" + txtctgry.getText() + "',"
                        + "'" + txtpfood.getText() + "','" + tffood.getText() + "','" + total + "','" + txtdate.getText() + "')";

                Statement st = conn.createStatement();
                st.executeUpdate(sql2);
                simpan_no();
                txtamount.setText(String.valueOf(simpan2 + total));
                JOptionPane.showMessageDialog(this, "Order Success");
                tampil_data();
                bcancel.setEnabled(true); bPay.setEnabled(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_bOrderActionPerformed

    private void bOrder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOrder1ActionPerformed
        conn = MainClassKoneksi1.getKoneksi();
        if (tfdrink.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please insert amount");
        } else {
            int total = Integer.parseInt(txtpdrink.getText()) * Integer.parseInt(tfdrink.getText());
            int simpan2 = 0;
            if (txtamount.getText().equals("")) {
                simpan2 = 0;
            } else {
                simpan2 = Integer.valueOf(txtamount.getText());
            }
            try {
                String sql2 = "INSERT INTO tr_transaction (kode_tr,Menu,Category,Price,Qty,Amount,dt) VALUES"
                        + "('" + txtidtr.getText() + "','" + cbdrink.getSelectedItem().toString() + "','" + txtctgry1.getText() + "',"
                        + "'" + txtpdrink.getText() + "','" + tfdrink.getText() + "','" + total + "','" + txtdate.getText() + "')";

                Statement st = conn.createStatement();
                st.executeUpdate(sql2);
                simpan_no();
                txtamount.setText(String.valueOf(simpan2 + total));
                JOptionPane.showMessageDialog(this, "Order Success");
                tampil_data();
                bcancel.setEnabled(true);
                bPay.setEnabled(true);
                } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_bOrder1ActionPerformed

    private void bOrder2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOrder2ActionPerformed
        conn = MainClassKoneksi1.getKoneksi();
        if (tfdessert.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please insert amount");
        } else {
            int total = Integer.parseInt(txtpdessert.getText()) * Integer.parseInt(tfdessert.getText());
            int simpan2 = 0;
            if (txtamount.getText().equals("")) {
                simpan2 = 0;
            } else {
                simpan2 = Integer.valueOf(txtamount.getText());
            }
            try {
                String sql2 = "INSERT INTO tr_transaction (kode_tr,Menu,Category,Price,Qty,Amount,dt) VALUES"
                        + "('" + txtidtr.getText() + "','" + cbdessert.getSelectedItem().toString() + "','" + txtctgry3.getText() + "',"
                        + "'" + txtpdessert.getText() + "','" + tfdessert.getText() + "','" + total + "','" + txtdate.getText() + "')";

                Statement st = conn.createStatement();
                st.executeUpdate(sql2);
                simpan_no();
                txtamount.setText(String.valueOf(simpan2 + total));
                JOptionPane.showMessageDialog(this, "Order Success");
                tampil_data();
                bcancel.setEnabled(true);
                bPay.setEnabled(true);
                 } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_bOrder2ActionPerformed

    private void bOrder3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOrder3ActionPerformed
        conn = MainClassKoneksi1.getKoneksi();
        if (tfsnack.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please insert amount");
        } else {
            int total = Integer.parseInt(txtpsnack.getText()) * Integer.parseInt(tfsnack.getText());
            int simpan2 = 0;
            if (txtamount.getText().equals("")) {
                simpan2 = 0;
            } else {
                simpan2 = Integer.valueOf(txtamount.getText());
            }
            try {
                String sql2 = "INSERT INTO tr_transaction (kode_tr,Menu,Category,Price,Qty,Amount,dt) VALUES"
                        + "('" + txtidtr.getText() + "','" + cbsnack.getSelectedItem().toString() + "','" + txtctgry2.getText() + "',"
                        + "'" + txtpsnack.getText() + "','" + tfsnack.getText() + "','" + total + "','" + txtdate.getText() + "')";

                Statement st = conn.createStatement();
                st.executeUpdate(sql2);
                simpan_no();
                txtamount.setText(String.valueOf(simpan2 + total));
                JOptionPane.showMessageDialog(this, "Order Success");
                tampil_data();
                bcancel.setEnabled(true);
                bPay.setEnabled(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_bOrder3ActionPerformed

    private void bNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNewActionPerformed
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        txtamount.setText(""); tfcashback.setText(""); tfpayment.setText("");
        cbfood.setSelectedItem("Food"); tffood.setText(""); txtpfood.setText("");
        cbdrink.addItem("Drink"); tfdrink.setText("");txtpdessert.setText("");
        cbdessert.addItem("Dessert"); tfdessert.setText("");txtpdrink.setText("");
        cbsnack.addItem("Snack"); tfsnack.setText("");txtpsnack.setText(""); 
        bupdate.setEnabled(false);bPay.setEnabled(false);bcancel.setEnabled(false);bNew.setEnabled(false);
        bOrder.setEnabled(true); bOrder1.setEnabled(true); 
        bOrder2.setEnabled(true);bOrder3.setEnabled(true);
        
       AutoNumber();
    }//GEN-LAST:event_bNewActionPerformed

    private void bcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelActionPerformed
        conn = MainClassKoneksi1.getKoneksi();
            int row = tbtransaction.getSelectedRow();
        try {
            Statement st = conn.createStatement();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Choose Table");
            } else {
                int harga = Integer.parseInt((String) tbtransaction.getModel().getValueAt(row, 5));
                int total = Integer.parseInt(txtamount.getText());
                String sql = "DELETE FROM tr_transaction WHERE id_transaction = '" + tbtransaction.getModel().getValueAt(row, 0) + "'";
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Order Canceled");
                txtamount.setText(String.valueOf(total - harga));
                tampil_data();
                clear();
            }
        } catch (Exception e) {
        }
    
    }//GEN-LAST:event_bcancelActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
this.dispose();
 new SIlog().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bupdateActionPerformed
        try {
            //String [] judul = tbtransaction.getSelectedColumns().;
//int br = tbtransaction.getSelectedRowCount();
//int kl = tbtransaction.getSelectedColumnCount();
//String [][] o = tbtransaction.getModel().getValueAt([br][kl]);
//String dm = txtamount.getText();
//String byr = tfpayment.getText();
//String kb = tfcashback.getText();
//String iu = txtuser.getText();
//String tr = txtidtr.getText();
//
//pbill pb = new pbill(judul,o,br,kl,dm,iu,tr,byr,kb);

pbill();} catch (DocumentException ex) {
            Logger.getLogger(Ordered.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ordered.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(Ordered.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_bupdateActionPerformed

    private void tfpaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfpaymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfpaymentActionPerformed

    private void tfcashbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfcashbackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfcashbackActionPerformed

    public void select_menuf() {
        cbfood.addItem("Food");
        try {
            conn = MainClassKoneksi1.getKoneksi();
            String sql = "SELECT * FROM ms_food WHERE ktgry_food = 'Food'";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                cbfood.addItem(rs.getString("nm_food"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Ordered.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void select_menud() {
        cbdrink.addItem("Drink");
        try {
            conn = MainClassKoneksi1.getKoneksi();
            String sql = "SELECT * FROM ms_food WHERE ktgry_food = 'Drink'";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                cbdrink.addItem(rs.getString("nm_food"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Ordered.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void select_menuds() {
        cbdessert.addItem("Dessert");
        try {
            conn = MainClassKoneksi1.getKoneksi();
            String sql = "SELECT * FROM ms_food WHERE ktgry_food = 'Dessert'";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                cbdessert.addItem(rs.getString("nm_food"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Ordered.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void select_menus() {
        cbsnack.addItem("Snack");
        try {
            conn = MainClassKoneksi1.getKoneksi();
            String sql = "SELECT * FROM ms_food WHERE ktgry_food = 'Snack'";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                cbsnack.addItem(rs.getString("nm_food"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Ordered.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void simpan_no() {
        conn = MainClassKoneksi1.getKoneksi();
        String sql1 = "DELETE FROM detail_transaction WHERE kode_tr = '"+txtidtr.getText()+"'";
        String sql = "INSERT INTO detail_transaction (kode_tr,unm_user,dt) VALUES('" + txtidtr.getText() + "','" + txt_id_kasir.getText() + "','" + tglsekarang + "')";
        try {
            Statement st = conn.createStatement();
             st.executeUpdate(sql1);
            st.executeUpdate(sql);
        } catch (Exception e) {
        }
    }

    private void tampil_data() {
        conn = MainClassKoneksi1.getKoneksi();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        TableColumn column;
        tbtransaction.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS); 
        column = tbtransaction.getColumnModel().getColumn(0); 
        column.setPreferredWidth(40);
        column = tbtransaction.getColumnModel().getColumn(1); 
        column.setPreferredWidth(200);
        column = tbtransaction.getColumnModel().getColumn(2); 
        column.setPreferredWidth(80);
        column = tbtransaction.getColumnModel().getColumn(3); 
        column.setPreferredWidth(100);
        column = tbtransaction.getColumnModel().getColumn(4); 
        column.setPreferredWidth(40);
        column = tbtransaction.getColumnModel().getColumn(5); 
        column.setPreferredWidth(100);
        try {
            Statement st = conn.createStatement();
            String sql = "SELECT `id_transaction`,`Menu`,`Category`,`Price`,`Qty`,`Amount` FROM tr_transaction WHERE kode_tr = '" + txtidtr.getText() + "'";
            rs = st.executeQuery(sql);
            while (rs.next()) {
                Object[] o;
                o = new Object[6];
                o[0] = rs.getString(1);
                o[1] = rs.getString(2);
                o[2] = rs.getString(3);
                o[3] = rs.getString(4);
                o[4] = rs.getString(5);
                o[5] = rs.getString(6);
                model.addRow(o);
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void AutoNumber() {
        try {
            conn = MainClassKoneksi1.getKoneksi();
            Statement st = conn.createStatement();
            String sql = "SELECT * FROM detail_transaction ORDER BY kode_tr DESC";
            rs = st.executeQuery(sql);
            if (rs.next()) {
                String kode = rs.getString("kode_tr").substring(3);
                String AN = "" + (Integer.parseInt(kode) + 1);
                String Nol = "";

                if (AN.length() == 1) {
                    Nol = "00";
                } else if (AN.length() == 2) {
                    Nol = "0";
                } else if (AN.length() == 3) {
                    Nol = "";
                }
                txtidtr.setText("KT" + Nol + AN);
            } else {
                txtidtr.setText("KT001");
            }
            rs.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void tglskrg() {
        Thread t2 = new Thread() {
            public void run() {
                for (;;) {
                    Calendar cal = new GregorianCalendar();
                    tglsekarang = (cal.get(Calendar.YEAR) + "-"
                            + (cal.get(Calendar.MONTH) + 1) + "-"
                            + cal.get(Calendar.DATE));
                    txtdate.setText(tglsekarang);
                     wktsekarang = (cal.get(Calendar.HOUR)+":"
                                +cal.get(Calendar.MINUTE)+":"
                                +cal.get(Calendar.SECOND));
                     txtclock.setText(wktsekarang);
                    
                }
            }
        ;
        };
        t2.start();
    }

    public void invisible() {
        txtctgry.setVisible(false);
        txtctgry1.setVisible(false);
        txtctgry2.setVisible(false);
        txtctgry3.setVisible(false);
    }
     public void clear(){
        cbfood.addItem("Food"); tffood.setText("");
        cbdrink.addItem("Drink"); tfdrink.setText("");
        cbdessert.addItem("Dessert"); tfdessert.setText("");
        cbsnack.addItem("Snack"); tfsnack.setText("");
    }

     
     
   public void pbill() throws DocumentException, FileNotFoundException, IOException, InterruptedException {
       
       Document d = new Document();
        PdfWriter.getInstance(d, new FileOutputStream("Struck.pdf"));
        PdfPTable pt = new PdfPTable(tbtransaction.getColumnCount());
        d.open();

        Image img;
        img = Image.getInstance("D:\\NetBeansProjects\\SIPerpus\\warteg1.jpg");
        img.setAlignment(Image.MIDDLE);
        img.scaleToFit(d.getPageSize().getWidth() - d.leftMargin() - d.rightMargin(), 110);
        d.add(img);
        Paragraph jk = new Paragraph("");
        jk.setSpacingBefore(30);
        d.add(new Paragraph("Nama : " + txt_id_kasir.getText()));
        d.add(new Paragraph("No. Transaksi : " + txtidtr.getText()));
        d.add(new Paragraph("Tanggal Transaksi : " + tglsekarang +" "+ wktsekarang));
        Paragraph p = new Paragraph("-------------------------------------------------------------------------------------------------------------");
        p.setAlignment(Paragraph.ALIGN_CENTER);
         p.setSpacingBefore(25);
        p.setSpacingAfter(15);
        d.add(p);
        for (int i = 0; i < tbtransaction.getColumnCount(); i++) {
            pt.addCell(tbtransaction.getColumnName(i));
        }
        for (int i = 0; i < tbtransaction.getRowCount(); i++) {
            for (int j = 0; j < tbtransaction.getColumnCount(); j++) {
                pt.addCell(tbtransaction.getModel().getValueAt(i, j).toString());
            }
        }
       
        d.add(pt);
        Paragraph l = new Paragraph("-------------------------------------------------------------------------------------------------------------");
        l.setAlignment(Paragraph.ALIGN_CENTER);
        l.setSpacingAfter(10);
        d.add(l);
        Paragraph t = new Paragraph("Total = " + txtamount.getText());
        t.setAlignment(Paragraph.ALIGN_RIGHT);
        t.setSpacingAfter(10);
        d.add(t);
        Paragraph b = new Paragraph("Bayar = " + tfpayment.getText());
        b.setAlignment(Paragraph.ALIGN_RIGHT);
        b.setSpacingAfter(10);
        d.add(b);
        Paragraph r = new Paragraph("---------------------------------------");
        r.setAlignment(Paragraph.ALIGN_RIGHT);
        r.setSpacingAfter(15);
        d.add(r);
        Paragraph k = new Paragraph("Kembali = " + tfcashback.getText());
        k.setAlignment(Paragraph.ALIGN_RIGHT);
        k.setSpacingAfter(10);
        d.add(k);
        Paragraph s = new Paragraph("-------------------------------------------------------------------------------------------------------------");
        s.setAlignment(Paragraph.ALIGN_CENTER);
        s.setSpacingAfter(10);
        d.add(s);
        Paragraph n = new Paragraph("Terima Kasih, Atas Kunjungan Anda");
        n.setAlignment(Paragraph.ALIGN_CENTER);
        n.setSpacingAfter(10);
        d.add(n);
        Paragraph m = new Paragraph("**" + txt_id_kasir.getText() + "**");
        m.setAlignment(Paragraph.ALIGN_CENTER);
        m.setSpacingAfter(15);
        d.add(m);
        d.close();

        Process pr = Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "Struck.pdf");
        pr.waitFor();
    }   
     
     
     public void setsize(){
pack(); // give a suitable size to window automatically        
setSize(1024, 768); // << not working!!!
setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
setVisible(true); // make window visible
    }
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ordered.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ordered.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ordered.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ordered.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ordered().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bNew;
    private javax.swing.JButton bOrder;
    private javax.swing.JButton bOrder1;
    private javax.swing.JButton bOrder2;
    private javax.swing.JButton bOrder3;
    private javax.swing.JButton bPay;
    private javax.swing.JButton bcancel;
    private javax.swing.JButton bupdate;
    private javax.swing.JComboBox<String> cbdessert;
    private javax.swing.JComboBox<String> cbdrink;
    private javax.swing.JComboBox<String> cbfood;
    private javax.swing.JComboBox<String> cbsnack;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbtransaction;
    private javax.swing.JTextField tfcashback;
    private javax.swing.JTextField tfdessert;
    private javax.swing.JTextField tfdrink;
    private javax.swing.JTextField tffood;
    private javax.swing.JTextField tfpayment;
    private javax.swing.JTextField tfsnack;
    private javax.swing.JLabel txt_id_kasir;
    private javax.swing.JLabel txtamount;
    private javax.swing.JLabel txtclock;
    private javax.swing.JLabel txtctgry;
    private javax.swing.JLabel txtctgry1;
    private javax.swing.JLabel txtctgry2;
    private javax.swing.JLabel txtctgry3;
    private javax.swing.JLabel txtdate;
    private javax.swing.JLabel txtidtr;
    private javax.swing.JLabel txtidtr1;
    private javax.swing.JLabel txtpdessert;
    private javax.swing.JLabel txtpdrink;
    private javax.swing.JLabel txtpfood;
    private javax.swing.JLabel txtpsnack;
    // End of variables declaration//GEN-END:variables

   
}
